library( car )
library( rgl )
library( mgcv )
tsne3 <- Rtsne( df, dim =3, perplexity = 10)
df.tsne3 <- data.frame(tsne3$Y)
scatter3d( x = df.tsne3$X1, y = df.tsne3$X2, z = df.tsne3$X3)
str(swiss)
dup = which(duplicated(swiss))
dup
tsne <- Rtsne( swiss, dim=2, perplexity=10 )
tsne
df.tsne <- data.frame(tsne$Y)
ggplot(df.tsne, aes(x=X1, y=X2)) +
geom_point(size=2)
tsne3 <- Rtsne3( swiss, dim=3, perplexity=10 )
df.tsne3 <- data.frame(tsne3$Y)
scatter3d( x=df.tsne3$X1, y=df.tsne3$X2, z=df.tsne3$X3)
library(ggmap)
register_google( key = 'AIzaSyDlmljbgzrqBC-ug1Mr1Q1Y4gvEOkOcR_g' )
gc <- geocode( enc2utf8( "서울시청" ) )
cen <- as.numeric( gc )
map <- get_googlemap( center = cen,
zoom = 10, size = c( 600, 600 ),
maptype = "roadmap" )
gc <- geocode( enc2utf8( "서울시청" ) )
cen <- as.numeric( gc )
cen
register_google( key = 'AIzaSyDlmljbgzrqBC-ug1Mr1Q1Y4gvEOkOcR_g' )
map <- get_googlemap( center = cen,
zoom = 10, size = c( 600, 600 ),
maptype = "roadmap" )
gc
gc <- geocode( enc2utf8("금강산") )
gc
cen <- as.numeric(gc)
cen
ggmap(map)
map <- get_googlemap( center = cen,
zoom = 14, size = c( 600, 600 ),
maptype = "roadmap" )
ggmap(map)
gc <- geocode( enc2utf8( "서울시청" ) )
cen <- as.numeric( gc )
cen
map <- get_googlemap( center = cen,
zoom = 14, size = c( 600, 600 ),
maptype = "roadmap" )
ggmap(map)
gc <- geocode( enc2utf8("금강산") )
cen <- as.numeric(gc)
map <- get_googlemap( center = cen,
zoom = 8, size = c(500, 500),
maptype = "hybrid" )
ggmap(map)
gc <- geocode( enc2utf8("강남역"))
cen <- as.numeric(gc)
map <- get_googlemap( cen,
zoom = 16,
size = c(640, 640),
maptype = "roadmap")
ggmap(map)
map <- get_googlemap( c(127.397692, 36.337058),
zoom = 9,
maptype = "roadmap")
ggmap(map)
cen <- c(135.502330, 34.693594)
cen
str(cen)
map <- get_googlemap( cen,
zoom = 10,
maptype = "roadmap" )
ggmap(map)
hanriver <- geocode(enc2utf8("한강"))
hanriver
str(df)
hanriver
point <- as.numeric(hanriver)
point
gangnam <- geocode(enc2utf8("강남구청"))
gangnam
hall <- geocode(enc2utf8("구청"))
hall
hall <- geocode(enc2utf8("관악구청"))
hall
names <- c("강동구청", "송파구청", "강남구청", "서초구청", "관악구청","동작구청",
"영등포구청","금천구청","구로구청","양천구청", "강서구청", "용산구청",
"마포구청", "광진구청")
gc <- c()
gc <- apply(geocode(names))
gc <- apply(names, geocode())
gc <- apply(names, FUN = geocode())
gc <- apply(names, FUN = geocode(enc2utf8()))
gc <- c()
for (i in 1:length(names)) {
gc <- c(gc, geocode(enc2utf8(i)))
}
gc
for (i in 1:length(names)) {
result <- geocode(enc2utf8(i))
print(result)
}
for (i in 1:length(names)) {
result <- as.numeric(geocode(enc2utf8(i)))
print(result)
}
for (i in 1:length(names)) {
result <- as.vector(geocode(enc2utf8(i)))
print(result)
}
length(names)
names[1]
enc2utf8(names[1])
geocode(enc2utf8(names[1]))
for (i in 1:length(names)) {
result <- as.vector(geocode(enc2utf8(names[i])))
print(result)
}
gc <- c()
for (i in 1:length(names)) {
gc <- c(gc, as.vector(geocode(enc2utf8(names[i]))))
}
gc
gc <- c()
for (i in 1:length(names)) {
gc <- c(gc, names[i] = as.vector(geocode(enc2utf8(names[i]))))
}
gc
names(gc)
str(gc)
gc
gc <- c()
for (i in 1:length(names)) {
gc <- c(gc, as.vector(geocode(enc2utf8(names[i]))))
#  namegc
}
str(gc)
df <- data.frame
df
rownames[1]
rownames[1,]
install.packages("devtools")
install.packages("devtools")
df
devtools::install_github("cardiomoon/kormaps2014")
devtools::install_github("cardiomoon/moonBook2")
library(kormaps2014)
library(moonBook2)
areacode
areacode1 <- changeCode(areacode)
areacode1
get_geocode <- function( x ) {
code <- geocode(enc2utf8( x ))
return ( code )
}
get_geocode("강동구청")
library(ggmap)
register_google( key = 'AIzaSyDlmljbgzrqBC-ug1Mr1Q1Y4gvEOkOcR_g' )
get_geocode <- function( x ) {
code <- geocode(enc2utf8( x ))
return ( code )
}
get_geocode("강동구청")
for i in 1:length(names)) {
gcode <- get_geocode(names[i])
print(gcode)
}
for (i in 1:length(names)) {
gcode <- get_geocode(names[i])
print(gcode)
}
for (i in 1:length(names)) {
gc <- data.frame(get_geocode(names[i]))
dimnames(gc) <- c(dimnames(gc), names[i])
}
gc
for (i in 1:length(names)) {
gc <- data.frame(get_geocode(names[i]))
dimnames(df) <- c(dimnames(df), names[i])
df <- data.frame(df, gc)
}
df
df <- data.frame(matrix(,nrow=1, ncol=2))
df
for (i in 1:length(names)) {
gc <- data.frame(get_geocode(names[i]))
dimnames(df) <- c(dimnames(df), names[i])
df <- data.frame(df, gc)
}
df
for (i in 1:length(names)) {
if (i = 1) {
gc <- data.frame(get_geocode(names[i]))
dimnames(gc) <- c(names[i])
}
#  gc <- data.frame(get_geocode(names[i]))
#  dimnames(df) <- c(dimnames(df), names[i])
#  df <- data.frame(df, gc)
}
gc
for (i in 1:length(names)) {
if (i = 1) {
gc <- data.frame(get_geocode(names[i]))
dimnames(gc) <- c(names[i])
df <- gc
} else {
df <- data.frame(df, get_geocode(names[i]))
dimnames(df) <- c(dimnames(df), names[i])
}
}
df
for (i in 1:length(names)) {
if (i = 1) {
gc <- data.frame(get_geocode(names[i]))
dimnames(gc) <- c(names[i])
df <- gc
} else {
df <- rbind(df, get_geocode(names[i]))
dimnames(df) <- c(dimnames(df), names[i])
}
}
df
length(names)
for (i in 1:length(names)) {
if (i = 1) {
gc <- data.frame(get_geocode(names[i]))
dimnames(gc) <- c(names[i])
df <- gc
} else if {
df <- rbind(df, get_geocode(names[i]))
dimnames(df) <- c(dimnames(df), names[i])
}
}
df
for (i in 1:length(names)) {
if (i = 1) {
gc <- data.frame(get_geocode(names[i]))
df <- gc
} else if {
df <- rbind(df, get_geocode(names[i]))
}
}
df
geo_code <- geocode(enc2utf8(names))
geo_code
geo_code <- geocode(enc2utf8(names))
hall <- data.frame(geo_code)
rownames(hall) <- names
hall
point[2]
hall %>%
filter( lat < point[2])
hall %>%
filter( hall$lat < point[2] )
hall
hall$lat
str(hall$lat)
library(dplyr)
hall %>%
filter( hall$lat < point[2] )
point[2]
south_hall <- subset( hall$lat < point[2] )
south_hall
south_hall <- subset( hall, hall$lat < point[2] )
south_hall
south_hall <- subset( hall, lat < point[2] )
south_hall
geo_code
gc <- geocode(enc2utf8(names))
df <- data.frame( name = names, lon = gc$lon,
lat = gc$lat )
df
cen <- c(mean(df$lon), mean(df$lat) )
map <- get_googlemap( center = cen,
maptype = "roadmap",
zoom = 10,
size = c( 640, 640 ),
marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data = df,
aes( x = lon, y = lat ),
size = 5,
label = df$name )
cen <- c(mean(df$lon), mean(df$lat) )
map <- get_googlemap( center = cen,
maptype = "roadmap",
zoom = 13,
size = c( 640, 640 ),
marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data = df,
aes( x = lon, y = lat ),
size = 5,
label = df$name )
df
cen <- c(mean(df$lon), mean(df$lat) )
map <- get_googlemap( center = cen,
maptype = "roadmap",
zoom = 13,
size = c( 640, 640 ),
marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data = df,
aes( x = lon, y = lat ),
size = 5,
label = df$name )
gc <- geo_code(names)
gc
names = c("부산광역시", "대구광역시", "인천광역시","광주광역시", "대전광역시", "울산광역시")
gc <- geo_code(names)
gc
names = c("부산광역시", "대구광역시", "인천광역시","광주광역시", "대전광역시", "울산광역시")
gc <-  geocode(enc2utf8(names))
gc
df <- data.frame( name = names, lon = gc$lon, lat = gc$lat )
cen <- c( mean(df$lon), mean(df$lat) )
map <- get_googlemap( center = cen, maptype = "roadmap", zoom = 10, marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data=df, aes(x=lon, y=lat), size=5, label=df$name)
df
names = c("부산광역시", "대구광역시", "인천광역시","광주광역시", "대전광역시", "울산광역시")
gc <-  geocode(enc2utf8(names))
gc
df <- data.frame( name = names, lon = gc$lon, lat = gc$lat )
cen <- c( mean(df$lon), mean(df$lat) )
map <- get_googlemap( center = cen, maptype = "roadmap", zoom = 10, marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data=df, aes(x=lon, y=lat), size=5, label=df$name)
map <- get_googlemap( center = cen, maptype = "roadmap", zoom = 6, marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data=df, aes(x=lon, y=lat), size=5, label=df$name)
#R을 이용하여 서울, 경기, 강원 지역의 국립공원 위치를 지도 상에 마커로 표시하되 국립공원의 이름을 함께 표시하시오.
names = c("북한산국립공원", "설악산국립공원","오대산국립공원","치악산국립공원",
"태백산국립공원")
gc <-  geocode(enc2utf8(names))
gc
gc <-  geocode(enc2utf8(names))
df <- data.frame( name=names, lon=gc$lon, lat=gc$lat )
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap( center = cen, maptype = "roadmap", zoom=6, marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data=df, aes(x=lon, y=lat), size=5, label=df$name)
df <- data.frame( name=names, lon=gc$lon, lat=gc$lat )
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap( center = cen, maptype = "roadmap", zoom=8, marker = gc )
gmap <- ggmap( map )
gmap +
geom_text( data=df, aes(x=lon, y=lat), size=5, label=df$name)
setwd("D:/Rclass")
df <- read.csv("report.csv", header=T)
df
t_acc <- read.csv("report.csv")
t_acc
t_acc <- read.csv("report.csv", skip=2, col_names =F)
t_acc
t_acc <- read.csv("report.csv", skip=2, col_names = FALSE )
t_acc
t_acc <- read.csv("report.csv", skip=2 )
t_acc
t_acc <- read.csv("report.csv", skip=2, stringsAsFactors = F )
t_acc
t_acc <- read.csv("report.csv", skip=2, stringsAsFactors = F, col.names = F )
t_acc
t_acc <- read.csv("report.csv", skip=2, stringsAsFactors = F, col.names = F, header = F )
t_acc
t_acc <- read.csv("report.csv", header = F, skip=2, stringsAsFactors = F)
t_acc
t_acc <- read.csv("report.csv", header = F, skip=2, stringsAsFactors = F)
t_acc
str(t_acc)
t <- t_acc[t_acc[,V3 == "사고건수"]]
head(t)
t <- t_acc[t_acc[,3 == "사고건수"]]
head(t)
t <- t_acc[t_acc[,V3] == "사고건수"]]
head(t)
t <- t_acc[t_acc[,V3] == "사고건수"]
head(t)
t_acc[,V3]
t_acc[,'V3']
t <- t_acc[t_acc[,'V3'] == "사고건수"]
head(t)
t_acc[,'V3'] == "사고건수"
t <- t_acc[(t_acc[,'V3'] == "사고건수"),]
head(t)
t <- t[,1:4]
head(t)
t <- t_acc[(t_acc[,'V3'] == "사고건수"),][, 1:4]
head(t)
t
t_seoul <- t[t[,'V1'] == "서울"]
t_seoul
t_seoul <- t[(t[,'V1'] == "서울"),]
t_seoul
t_seoul <- t[(t[,'V1'] == "서울"),][c(2,4),]
t_seoul
t <- t_acc[(t_acc[,'V3'] == "사고건수"),][, 1:4]
t_seoul <- t[(t[,'V1'] == "서울"),][,c(2,4)]
t_seoul
t_seoul[-1,]
t_seoul$V2
t_seoul <- t_seoul[-1,]
df$acc <- t_seoul[,2]
df
naems <- t_seoul$V2
gc <- geocode(enc2utf8(names))
df <- data.frame(name=names, lon=gc$lon, lat=gc$lat)
df$acc <- t_seoul[,2]
df
names <- t_seoul$V2
gc <- geocode(enc2utf8(names))
df <- data.frame(name=names, lon=gc$lon, lat=gc$lat)
df$acc <- t_seoul[,2]
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_google(center = cen, maptype = "roadmap", zoom=6)
gmap <- ggmap(map)
gmap +
geom_point( data = , aes( x = lon, y = lat, size = acc ),
alpha = 0.5, col = "blue" ) +
scale_size_continuous( range = c(1, 14) )
cen <- c(mean(df$lon), mean(df$lat))
map <- get_google(center = cen, maptype = "roadmap", zoom=6)
gmap <- ggmap(map)
gmap +
geom_point( data = df, aes( x = lon, y = lat, size = acc ),
alpha = 0.5, col = "blue" ) +
scale_size_continuous( range = c(1, 14) )
str(df)
df$acc <- as.numeric(t_seoul[,2])
str(df)
result <- gsub('"', '', df$acc)
str(df)
t_acc <- read.csv("report.csv", header = F, skip=2, stringsAsFactors = F)
str(t_acc)
t <- t_acc[(t_acc[,'V3'] == "사고건수"),][, 1:4]
t_seoul <- t[(t[,'V1'] == "서울"),][,c(2,4)]
t_seoul <- t_seoul[-1,]
names <- t_seoul$V2
gc <- geocode(enc2utf8(names))
df <- data.frame(name=names, lon=gc$lon, lat=gc$lat)
df$acc <- t_seoul[,2]
result <- gsub('"', '', df$acc)
str(df)
result <- gsub(",", "", t_seoul$V4)
result
as.numeric(result)
names <- t_seoul$V2
gc <- geocode(enc2utf8(names))
df <- data.frame(name=names, lon=gc$lon, lat=gc$lat)
df$acc <- acc
acc <- as.numeric(result)
names <- t_seoul$V2
gc <- geocode(enc2utf8(names))
df <- data.frame(name=names, lon=gc$lon, lat=gc$lat)
df$acc <- acc
cen <- c(mean(df$lon), mean(df$lat))
map <- get_google(center = cen, maptype = "roadmap", zoom=6)
gmap <- ggmap(map)
gmap +
geom_point( data = df, aes( x = lon, y = lat, size = acc ),
alpha = 0.5, col = "blue" ) +
scale_size_continuous( range = c(1, 14) )
cen
map <- get_google(center = cen, maptype = "roadmap", zoom=10)
gmap <- ggmap(map)
gmap +
geom_point( data = df, aes( x = lon, y = lat, size = acc ),
alpha = 0.5, col = "blue" ) +
scale_size_continuous( range = c(1, 14) )
df$lon
df$acc
gc
names
sgc <- geocode(enc2utf8(names))
sgc
df <- data.frame(name=names, lon=sgc$lon, lat=sgc$lat)
df
df$acc <- acc
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_google(center = cen, maptype = "roadmap", zoom=10)
gmap <- ggmap(map)
gmap +
geom_point( data = df[2:4], aes( x = lon, y = lat, size = acc ),
alpha = 0.5, col = "blue" ) +
scale_size_continuous( range = c(1, 14) )
library(ggmap)
register_google( key = 'AIzaSyDlmljbgzrqBC-ug1Mr1Q1Y4gvEOkOcR_g' )
cen <- c(mean(df$lon), mean(df$lat))
map <- get_google(center = cen, maptype = "roadmap", zoom=10)
gmap <- ggmap(map)
gmap +
geom_point( data = df[2:4], aes( x = lon, y = lat, size = acc ),
alpha = 0.5, col = "blue" ) +
scale_size_continuous( range = c(1, 14) )
df
head(wind)
#문8)
#7번과 동일한 자료를 이용하여 제주시 1년 교통사고 발생건수를 지도상에 원의 크기로 나타내시오.
t_acc
#문8)
#7번과 동일한 자료를 이용하여 제주시 1년 교통사고 발생건수를 지도상에 원의 크기로 나타내시오.
tail(t_acc)
t_acc[t_acc$V1 == '제주']
t_acc[t_acc$V1 == '제주',c(1,2,3,4)]
